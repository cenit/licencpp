name: licencpp ci

on:
  push:
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: '0 2 * * *'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
        matrix:
            os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    - name: 'Build'
      shell: pwsh
      run: |
        python -m pip install --upgrade pip setuptools wheel pyinstaller
        pip install -r requirements.txt
        pyinstaller -F ./src/licencpp.py --noconfirm
    - name: 'Upload Artifact'
      uses: actions/upload-artifact@v4
      with:
        name: licencpp-${{ runner.os }}
        path: ${{ github.workspace }}/dist/licencpp*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: 'Download Artifacts - Ubuntu'
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
      uses: actions/download-artifact@v4
      with:
        name: licencpp-Linux
        path: ${{ github.workspace }}/dist/ubuntu
    - name: 'Download Artifacts - Windows'
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
      uses: actions/download-artifact@v4
      with:
        name: licencpp-Windows
        path: ${{ github.workspace }}/dist/windows
    - name: 'Download Artifacts - MacOS'
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
      uses: actions/download-artifact@v4
      with:
        name: licencpp-macOS
        path: ${{ github.workspace }}/dist/macos
    - name: 'List files in dist directory (Linux/macOS)'
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
      run: |
        echo "Listing files in dist directory:"
        find ${{ github.workspace }}/dist
    - name: 'Create Release'
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Zip artifacts
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
      run: |
        zip --junk-paths ${{ github.workspace }}/dist/licencpp-Linux.zip ${{ github.workspace }}/dist/ubuntu/licencpp
        zip --junk-paths ${{ github.workspace }}/dist/licencpp-Windows.zip ${{ github.workspace }}/dist/windows/licencpp.exe
        zip --junk-paths ${{ github.workspace }}/dist/licencpp-macOS.zip ${{ github.workspace }}/dist/macos/licencpp
    - name: 'Upload Release Asset - Ubuntu'
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ github.workspace }}/dist/licencpp-Linux.zip
        asset_name: licencpp-Linux.zip
        asset_content_type: application/zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: 'Upload Release Asset - Windows'
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ github.workspace }}/dist/licencpp-Windows.zip
        asset_name: licencpp-Windows.zip
        asset_content_type: application/zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: 'Upload Release Asset - MacOS'
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ github.workspace }}/dist/licencpp-macOS.zip
        asset_name: licencpp-macOS.zip
        asset_content_type: application/zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
